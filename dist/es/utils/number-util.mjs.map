{"version":3,"file":"number-util.mjs","sources":["../../../packages/utils/number-util.ts"],"sourcesContent":["/**\n * 金額格式化 - 每千位數加逗號\n * @param  {Number|String} num 欲格式化的數字\n * @param  {boolean} hasSymbol 是否有正號\n * @return {String}            格式化結果\n */\nexport function formatMoney(num: string | number = 0, hasSymbol = false) {\n    if (Number.isNaN(+num)) return `${num}`;\n\n    const symbol = +num > 0 && hasSymbol ? '+' : '';\n    const [integerText = '', decimalText = ''] = `${num}`.split('.');\n    const dotText = decimalText ? '.' : '';\n\n    return `${symbol}${integerText.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}${dotText}${decimalText}`;\n}\n\n/**\n * 金額格式化 - 每千位數加逗號，小數不足兩位補0\n * @param  {Number|String} num 欲格式化的數字\n * @param  {boolean} hasSymbol 是否有正號\n * @return {String}            格式化結果\n */\nexport function formatMoneyFixedTwo(num: string | number) {\n    if (Number.isNaN(+num)) return `${num}`;\n\n    const decimal = `${num}`.split('.')[1] || '';\n    if (decimal.length < 2) {\n        return formatMoney(numberFormat(num, 2));\n    }\n\n    return formatMoney(num);\n}\n\n/**\n * 小數點到第二位\n * @param  {Number|String} num 欲格式化的數字\n * @return {String}            格式化結果\n */\nexport function formatOdds(num: number | string) {\n    if (Number.isNaN(+num)) return `${num}`;\n    if (typeof num === 'string') return num;\n\n    return num.toFixed(2);\n}\n\n/**\n * 小數點到特定位數\n */\nexport function numberDecimal(num: string | number, decimal = 2) {\n    if (Number.isNaN(+num)) return `${num}`;\n    return (+num).toFixed(decimal);\n}\n\n/**\n * 數字格式化，三位一撇+小數點到特定位數\n */\nexport function numberFormat(num?: string | number, decimal = 2) {\n    if (num === null || num === undefined || num === '') return '';\n    return formatMoney(numberDecimal(num, decimal));\n}\n\n/**\n * 將數值轉成百分比\n * @param decimal 補到小數點後第幾位, default: 2\n * @example 0.982 => 98.2\n */\nexport function formatPercent(num: string | number, decimal = 2) {\n    const percentNumber = accMul(+num, 100);\n    return numberFormat(percentNumber, decimal);\n}\n\n/**\n * 檢查是不是百分比文字，若是的話將百分號拿掉\n */\nexport function maybePercentText(text: string | number) {\n    const percentText = `${text}`;\n    const percentRegResult = /^(-?[\\d]*(\\.[\\d]+)?)%$/.exec(percentText);\n\n    if (!percentRegResult) {\n        return {\n            text: percentText,\n            isPercent: false\n        };\n    }\n\n    return {\n        text: percentRegResult[1],\n        isPercent: true\n    };\n}\n\n/**\n * 基本的排序方法\n */\nexport function baseSorter(a: string | number, b: string | number, order: 'descend' | 'ascend' = 'ascend') {\n    let result = 0;\n\n    if (typeof a === 'number' && typeof b === 'number') {\n        result = a - b;\n    } else {\n        const _a = maybePercentText(a).text;\n        const _b = maybePercentText(b).text;\n\n        const aValue = isNaN(+_a) ? a : +_a;\n        const bValue = isNaN(+_b) ? b : +_b;\n\n        if (aValue < bValue) result = -1;\n        if (aValue > bValue) result = 1;\n    }\n\n    return order === 'ascend' ? result : -result;\n}\n\n/**\n * 乘法\n * @param  {Number} arg1 乘數1\n * @param  {Number} arg2 乘數2\n * @return {Number}      乘數1 * 乘數2\n */\nexport function accMul(arg1: number, arg2: number) {\n    let pow = 0;\n    const arguments1 = arg1.toString();\n    const arguments2 = arg2.toString();\n    // eslint-disable-next-line\n    try { pow += arguments1.split('.')[1].length; } catch (e) {}\n    // eslint-disable-next-line\n    try { pow += arguments2.split('.')[1].length; } catch (e) {}\n    return Number(arguments1.replace('.', '')) * Number(arguments2.replace('.', '')) / 10 ** pow;\n}\n\n/**\n * 除法\n * @param  {Number} arg1 被除數\n * @param  {Number} arg2 除數\n * @return {Number}      被除數 / 除數\n */\nexport function accDiv(arg1: number, arg2: number) {\n    let t1 = 0;\n    let t2 = 0;\n    // eslint-disable-next-line\n    try { t1 = arg1.toString().split('.')[1].length; } catch (e) {}\n    // eslint-disable-next-line\n    try { t2 = arg2.toString().split('.')[1].length; } catch (e) {}\n    const r1 = Number(arg1.toString().replace('.', ''));\n    const r2 = Number(arg2.toString().replace('.', ''));\n    return accMul(r1 / r2, 10 ** (t2 - t1));\n}\n\n/**\n * 'KB', 'MB', 'GB', 'TB'轉換為Byte的大小\n * @param  {String} sizeString Byte大小 `example: '20.5GB' or '300KB'`\n */\nexport function sizeTransToBytes(sizeString = '') {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    for (const [index, size] of sizes.entries()) {\n        if (~sizeString.indexOf(size)) {\n            const sizeNumber = +sizeString.replace(size, '');\n            return accMul(sizeNumber, 1024 ** index);\n        }\n    }\n    return 0;\n}\n\n/**\n * Byte轉換為'KB', 'MB', 'GB', 'TB'等單位的大小\n * @param {Number} sizeString Byte大小\n */\nexport function bytesTranslate(bytes: number = 0): string {\n    const bytesLength = `${bytes}`.length;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const sizeBytesLength = [0, 4, 7, 10, 13];\n    let sizeIndex = 0;\n\n    while (sizeBytesLength[sizeIndex + 1] !== undefined\n        && (bytesLength >= sizeBytesLength[sizeIndex + 1])\n    ) {\n        sizeIndex += 1;\n    }\n\n    return `${+accDiv(bytes, 1024 ** sizeIndex).toFixed(2)}${sizes[sizeIndex]}`;\n}\n"],"names":[],"mappings":"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"}