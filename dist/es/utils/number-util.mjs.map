{"version":3,"file":"number-util.mjs","sources":["../../../packages/utils/number-util.ts"],"sourcesContent":["/**\n * 金額格式化 - 每千位數加逗號\n * @param  {Number|String} num 欲格式化的數字\n * @param  {boolean} hasSymbol 是否有正號\n * @return {String}            格式化結果\n */\nexport function formatMoney(num: string | number = 0, hasSymbol = false) {\n    if (Number.isNaN(+num)) { return num as string; }\n    const symbol = +num > 0 ? '+' : '';\n    const number = `${num}`.split('.');\n    return `${hasSymbol ? symbol : ''}${`${number[0]}`.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}${number[1] ? `.${number[1]}` : ''}`;\n}\n\n/**\n * 金額格式化 - 每千位數加逗號，小數不足兩位補0\n * @param  {Number|String} num 欲格式化的數字\n * @param  {boolean} hasSymbol 是否有正號\n * @return {String}            格式化結果\n */\nexport function formatMoneyFixedTwo(value: string | number) {\n    if (Number.isNaN(+value)) { return value; }\n\n    const decimal = `${value}`.split('.')[1] || '';\n\n    if (decimal.length < 2) {\n        return formatMoney((+value).toFixed(2));\n    }\n\n    return formatMoney(value);\n}\n\n/**\n * 小數點到第二位\n * @param  {Number|String} num 欲格式化的數字\n * @return {String}            格式化結果\n */\nexport function formatOdds(num: number | string) {\n    if (typeof num === 'string') { return num; }\n    return num.toFixed(2);\n}\n\n/**\n * 乘法\n * @param  {Number} arg1 乘數1\n * @param  {Number} arg2 乘數2\n * @return {Number}      乘數1 * 乘數2\n */\nexport function accMul(arg1: number, arg2: number) {\n    let pow = 0;\n    const arguments1 = arg1.toString();\n    const arguments2 = arg2.toString();\n    // eslint-disable-next-line\n    try { pow += arguments1.split('.')[1].length; } catch (e) {}\n    // eslint-disable-next-line\n    try { pow += arguments2.split('.')[1].length; } catch (e) {}\n    return Number(arguments1.replace('.', '')) * Number(arguments2.replace('.', '')) / 10 ** pow;\n}\n\n/**\n * 除法\n * @param  {Number} arg1 被除數\n * @param  {Number} arg2 除數\n * @return {Number}      被除數 / 除數\n */\nexport function accDiv(arg1: number, arg2: number) {\n    let t1 = 0;\n    let t2 = 0;\n    // eslint-disable-next-line\n    try { t1 = arg1.toString().split('.')[1].length; } catch (e) {}\n    // eslint-disable-next-line\n    try { t2 = arg2.toString().split('.')[1].length; } catch (e) {}\n    const r1 = Number(arg1.toString().replace('.', ''));\n    const r2 = Number(arg2.toString().replace('.', ''));\n    return accMul(r1 / r2, 10 ** (t2 - t1));\n}\n\n/**\n * 'KB', 'MB', 'GB', 'TB'轉換為Byte的大小\n * @param  {String} sizeString Byte大小 `example: '20.5GB' or '300KB'`\n */\nexport function sizeTransToBytes(sizeString = '') {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    for (const [index, size] of sizes.entries()) {\n        if (~sizeString.indexOf(size)) {\n            const sizeNumber = +sizeString.replace(size, '');\n            return accMul(sizeNumber, 1024 ** index);\n        }\n    }\n    return 0;\n}\n\n/**\n * Byte轉換為'KB', 'MB', 'GB', 'TB'等單位的大小\n * @param {Number} sizeString Byte大小\n */\nexport function bytesTranslate(bytes: number = 0): string {\n    const bytesLength = `${bytes}`.length;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const sizeBytesLength = [0, 4, 7, 10, 13];\n    let sizeIndex = 0;\n\n    while (sizeBytesLength[sizeIndex + 1] !== undefined\n        && (bytesLength >= sizeBytesLength[sizeIndex + 1])\n    ) {\n        sizeIndex += 1;\n    }\n\n    return `${+accDiv(bytes, 1024 ** sizeIndex).toFixed(2)}${sizes[sizeIndex]}`;\n}\n"],"names":[],"mappings":"qBAM4B,MAAuB,GAAG,YAAY,OAAO;AACrE,MAAI,OAAO,MAAM,CAAC,MAAM;AAAE,WAAO;AAAA;AACjC,QAAM,SAAS,CAAC,MAAM,IAAI,MAAM;AAChC,QAAM,SAAS,GAAG,MAAM,MAAM;AAC9B,SAAO,GAAG,YAAY,SAAS,KAAK,GAAG,OAAO,KAAK,QAAQ,2BAA2B,SAAS,OAAO,KAAK,IAAI,OAAO,OAAO;AAAA;6BAS7F,OAAwB;AACxD,MAAI,OAAO,MAAM,CAAC,QAAQ;AAAE,WAAO;AAAA;AAEnC,QAAM,UAAU,GAAG,QAAQ,MAAM,KAAK,MAAM;AAE5C,MAAI,QAAQ,SAAS,GAAG;AACpB,WAAO,YAAa,EAAC,OAAO,QAAQ;AAAA;AAGxC,SAAO,YAAY;AAAA;oBAQI,KAAsB;AAC7C,MAAI,OAAO,QAAQ,UAAU;AAAE,WAAO;AAAA;AACtC,SAAO,IAAI,QAAQ;AAAA;gBASA,MAAc,MAAc;AAC/C,MAAI,MAAM;AACV,QAAM,aAAa,KAAK;AACxB,QAAM,aAAa,KAAK;AAExB,MAAI;AAAE,WAAO,WAAW,MAAM,KAAK,GAAG;AAAA,WAAiB,GAAP;AAAA;AAEhD,MAAI;AAAE,WAAO,WAAW,MAAM,KAAK,GAAG;AAAA,WAAiB,GAAP;AAAA;AAChD,SAAO,OAAO,WAAW,QAAQ,KAAK,OAAO,OAAO,WAAW,QAAQ,KAAK,OAAO,MAAM;AAAA;gBAStE,MAAc,MAAc;AAC/C,MAAI,KAAK;AACT,MAAI,KAAK;AAET,MAAI;AAAE,SAAK,KAAK,WAAW,MAAM,KAAK,GAAG;AAAA,WAAiB,GAAP;AAAA;AAEnD,MAAI;AAAE,SAAK,KAAK,WAAW,MAAM,KAAK,GAAG;AAAA,WAAiB,GAAP;AAAA;AACnD,QAAM,KAAK,OAAO,KAAK,WAAW,QAAQ,KAAK;AAC/C,QAAM,KAAK,OAAO,KAAK,WAAW,QAAQ,KAAK;AAC/C,SAAO,OAAO,KAAK,IAAI,YAAY;AAAA;0BAON,aAAa,IAAI;AAC9C,QAAM,QAAQ,CAAC,SAAS,MAAM,MAAM,MAAM;AAC1C,aAAW,CAAC,OAAO,SAAS,MAAM,WAAW;AACzC,QAAI,CAAC,WAAW,QAAQ,OAAO;AAC3B,YAAM,aAAa,CAAC,WAAW,QAAQ,MAAM;AAC7C,aAAO,OAAO,YAAY,QAAQ;AAAA;AAAA;AAG1C,SAAO;AAAA;wBAOoB,QAAgB,GAAW;AACtD,QAAM,cAAc,GAAG,QAAQ;AAC/B,QAAM,QAAQ,CAAC,SAAS,MAAM,MAAM,MAAM;AAC1C,QAAM,kBAAkB,CAAC,GAAG,GAAG,GAAG,IAAI;AACtC,MAAI,YAAY;AAEhB,SAAO,gBAAgB,YAAY,OAAO,UAClC,eAAe,gBAAgB,YAAY,IACjD;AACE,iBAAa;AAAA;AAGjB,SAAO,GAAG,CAAC,OAAO,OAAO,QAAQ,WAAW,QAAQ,KAAK,MAAM;AAAA;;;;"}