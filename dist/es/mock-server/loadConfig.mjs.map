{"version":3,"file":"loadConfig.mjs","sources":["../../../packages/mock-server/loadConfig.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { rollup } from 'rollup';\n\nimport { nodeResolve } from '@rollup/plugin-node-resolve';\nimport esbuild from 'rollup-plugin-esbuild';\nimport commonjs from '@rollup/plugin-commonjs';\n\ninterface NodeModuleWithCompile extends NodeModule {\n    _compile(code: string, filename: string): any\n}\n\nconst debugMode = false;\nfunction debug(...str: string[]) {\n    if (debugMode) {\n        console.log(...str);\n    }\n}\n\nasync function bundleConfigFile(\n    fileName: string\n): Promise<string> {\n    // node-resolve must be imported since it's bundled\n    const bundle = await rollup({\n        input: fileName,\n        plugins: [\n            nodeResolve(),\n            commonjs(),\n            esbuild({\n                sourceMap: true,\n                target: 'es2018'\n            })\n        ],\n        external: (id: string) => (id[0] !== '.' && !path.isAbsolute(id)) || id.slice(-5, id.length) === '.json',\n        treeshake: false\n    });\n\n    const {\n        output: [{ code }]\n    } = await bundle.generate({\n        exports: 'named',\n        format: 'cjs'\n    });\n\n    return code;\n}\n\nasync function loadConfigFromBundledFile<T>(\n    fileName: string,\n    bundledCode: string\n): Promise<T> {\n    const extension = path.extname(fileName);\n    const defaultLoader = require.extensions[extension]!;\n    require.extensions[extension] = (module: NodeModule, filename: string) => {\n        if (filename === fileName) {\n            (module as NodeModuleWithCompile)._compile(bundledCode, filename);\n        } else {\n            defaultLoader(module, filename);\n        }\n    };\n    // clear cache in case of server restart\n    delete require.cache[require.resolve(fileName)];\n    const raw = require(fileName);\n    const config = raw.__esModule ? raw.default : raw;\n    require.extensions[extension] = defaultLoader;\n    return config;\n}\n\nfunction isFunction<T>(fnOrObj: (() => T) | T): fnOrObj is () => T {\n    return typeof fnOrObj === 'function';\n}\n\nexport async function resolveConfig<T>(inlineConfig: T, configName: string, configRoot: string = process.cwd()) {\n    const loadResult = await loadConfigFromFile<T>(configName, configRoot);\n\n    const config = Object.assign(inlineConfig, loadResult);\n\n    return config;\n}\n\nexport async function loadConfigFromFile<T>(\n    configName: string,\n    configRoot: string = process.cwd()\n): Promise<T | null> {\n    const start = Date.now();\n\n    let resolvedPath: string | undefined;\n    let isTS = false;\n\n    const jsconfigFile = path.resolve(configRoot, `${configName}.js`);\n    if (fs.existsSync(jsconfigFile)) {\n        resolvedPath = jsconfigFile;\n    }\n\n    if (!resolvedPath) {\n        const tsconfigFile = path.resolve(configRoot, `${configName}.ts`);\n        if (fs.existsSync(tsconfigFile)) {\n            resolvedPath = tsconfigFile;\n            isTS = true;\n        }\n    }\n\n    if (!resolvedPath) {\n        debug('no config file found.');\n        return null;\n    }\n\n    try {\n        let userConfig: (() => T) | T | undefined;\n\n        if (isTS) {\n            const code = await bundleConfigFile(resolvedPath);\n            userConfig = await loadConfigFromBundledFile(resolvedPath, code);\n            debug(`bundled config file loaded in ${Date.now() - start}ms`);\n        } else {\n            try {\n                // clear cache in case of server restart\n                delete require.cache[require.resolve(resolvedPath)];\n                userConfig = require(resolvedPath);\n                debug(`cjs config loaded in ${Date.now() - start}ms`);\n            } catch (e: any) {\n                const ignored = new RegExp(\n                    [\n                        'Cannot use import statement',\n                        'Unexpected token \\'export\\'',\n                        'Must use import to load ES Module',\n                        'Unexpected identifier' // #1635 Node <= 12.4 has no esm detection\n                    ].join('|')\n                );\n                if (!ignored.test(e.message as string)) {\n                    throw e;\n                }\n            }\n        }\n\n        const config = isFunction(userConfig) ? userConfig() : userConfig;\n        if (!(config instanceof Object)) {\n            throw new Error('config must export or return an object.');\n        }\n        return config;\n    } catch (e) {\n        debug(`failed to load config from ${resolvedPath}`);\n        throw e;\n    }\n}"],"names":[],"mappings":";;;;;;;AAYA,MAAM,YAAY;AAClB,kBAAkB,KAAe;AAC7B,MAAI,WAAW;AACX,YAAQ,IAAI,GAAG;AAAA;AAAA;AAIvB,gCACI,UACe;AAEf,QAAM,SAAS,MAAM,OAAO;AAAA,IACxB,OAAO;AAAA,IACP,SAAS;AAAA,MACL;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACJ,WAAW;AAAA,QACX,QAAQ;AAAA;AAAA;AAAA,IAGhB,UAAU,CAAC,OAAgB,GAAG,OAAO,OAAO,CAAC,KAAK,WAAW,OAAQ,GAAG,MAAM,IAAI,GAAG,YAAY;AAAA,IACjG,WAAW;AAAA;AAGf,QAAM;AAAA,IACF,QAAQ,CAAC,EAAE;AAAA,MACX,MAAM,OAAO,SAAS;AAAA,IACtB,SAAS;AAAA,IACT,QAAQ;AAAA;AAGZ,SAAO;AAAA;AAGX,yCACI,UACA,aACU;AACV,QAAM,YAAY,KAAK,QAAQ;AAC/B,QAAM,gBAAgB,QAAQ,WAAW;AACzC,UAAQ,WAAW,aAAa,CAAC,QAAoB,aAAqB;AACtE,QAAI,aAAa,UAAU;AACvB,MAAC,OAAiC,SAAS,aAAa;AAAA,WACrD;AACH,oBAAc,QAAQ;AAAA;AAAA;AAI9B,SAAO,QAAQ,MAAM,QAAQ,QAAQ;AACrC,QAAM,MAAM,QAAQ;AACpB,QAAM,SAAS,IAAI,aAAa,IAAI,UAAU;AAC9C,UAAQ,WAAW,aAAa;AAChC,SAAO;AAAA;AAGX,oBAAuB,SAA4C;AAC/D,SAAO,OAAO,YAAY;AAAA;6BAGS,cAAiB,YAAoB,aAAqB,QAAQ,OAAO;AAC5G,QAAM,aAAa,MAAM,mBAAsB,YAAY;AAE3D,QAAM,SAAS,OAAO,OAAO,cAAc;AAE3C,SAAO;AAAA;kCAIP,YACA,aAAqB,QAAQ,OACZ;AACjB,QAAM,QAAQ,KAAK;AAEnB,MAAI;AACJ,MAAI,OAAO;AAEX,QAAM,eAAe,KAAK,QAAQ,YAAY,GAAG;AACjD,MAAI,GAAG,WAAW,eAAe;AAC7B,mBAAe;AAAA;AAGnB,MAAI,CAAC,cAAc;AACf,UAAM,eAAe,KAAK,QAAQ,YAAY,GAAG;AACjD,QAAI,GAAG,WAAW,eAAe;AAC7B,qBAAe;AACf,aAAO;AAAA;AAAA;AAIf,MAAI,CAAC,cAAc;AACf,UAAM;AACN,WAAO;AAAA;AAGX,MAAI;AACA,QAAI;AAEJ,QAAI,MAAM;AACN,YAAM,OAAO,MAAM,iBAAiB;AACpC,mBAAa,MAAM,0BAA0B,cAAc;AAC3D,YAAM,iCAAiC,KAAK,QAAQ;AAAA,WACjD;AACH,UAAI;AAEA,eAAO,QAAQ,MAAM,QAAQ,QAAQ;AACrC,qBAAa,QAAQ;AACrB,cAAM,wBAAwB,KAAK,QAAQ;AAAA,eACtC,GAAP;AACE,cAAM,UAAU,IAAI,OAChB;AAAA,UACI;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACF,KAAK;AAEX,YAAI,CAAC,QAAQ,KAAK,EAAE,UAAoB;AACpC,gBAAM;AAAA;AAAA;AAAA;AAKlB,UAAM,SAAS,WAAW,cAAc,eAAe;AACvD,QAAI,oBAAoB,SAAS;AAC7B,YAAM,IAAI,MAAM;AAAA;AAEpB,WAAO;AAAA,WACF,GAAP;AACE,UAAM,8BAA8B;AACpC,UAAM;AAAA;AAAA;;;;"}