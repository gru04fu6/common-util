{"version":3,"file":"index.mjs","sources":["../../../packages/lazy-load/index.ts"],"sourcesContent":["import { throttle } from '@common-util/utils/factory-util';\nimport { getScrollParent } from '@common-util/utils/dom-util';\n\ninterface Binding {\n    /** 圖片網址 */\n    imageUrl: string;\n}\n\n/**\n * 懶加載\n *\n * @param params\n * @param params.lazyAttr\n * 暫存圖片網址的屬性名稱\n * `default: lazy`\n *\n * @param params.loadType\n * 載入圖片的方式 'src' | 'background'\n * `default: src`\n *\n * @param params.errorPath\n * 加載失敗的圖片\n *\n * @param params.loadingPath\n * 加載中的圖片\n */\nfunction lazyLoadFactory(params: {\n    lazyAttr?: string;\n    loadType?: 'src' | 'background';\n    errorPath?: string;\n    loadingPath?: string;\n}) {\n    const attr = params.lazyAttr || 'lazy';\n    const type = params.loadType || 'src';\n    const loadingPath = params.loadingPath || '';\n    const handlerMap: Map<HTMLElement, (e: Event) => void> = new Map();\n    /**\n     * 监听器\n     * [MDN说明](https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver)\n    */\n    let observer: IntersectionObserver | undefined;\n\n    /**\n     * img載入圖片\n     */\n    function loadImage(el: HTMLImageElement) {\n        const cache = el.src;\n        el.src = el.getAttribute(attr) || '';\n        el.onerror = function () {\n            el.src = params.errorPath || cache;\n            el.onerror = null;\n        };\n    }\n\n    /**\n     * 觸發加載時替換圖片\n     */\n    function loadElement(el: HTMLElement) {\n        switch (type) {\n            case 'src':\n                loadImage(el as HTMLImageElement);\n                break;\n            case 'background':\n                el.style.backgroundImage = `url(${el.getAttribute(attr)})`;\n                break;\n        }\n        el.removeAttribute(attr);\n    }\n\n    /**\n     * 檢查是否需要替換圖片\n     */\n    function checkReplaceImage(el: HTMLElement): boolean {\n        const scrollParent = getScrollParent(el);\n\n        if (!scrollParent) {\n            return false;\n        }\n\n        const bottom = scrollParent.scrollTop + scrollParent.clientHeight;\n        return bottom > el.offsetTop;\n    }\n\n    function generateScrollHandler(el: HTMLElement) {\n        return () => {\n            if (checkReplaceImage(el)) {\n                loadElement(el);\n                removeListener(el);\n            }\n        };\n    }\n\n    function setListener(el: HTMLElement) {\n        const handler = throttle(generateScrollHandler(el), 500);\n        handlerMap.set(el, handler);\n        window.addEventListener('scroll', handler);\n    }\n\n    function removeListener(el: HTMLElement) {\n        if (handlerMap.has(el)) {\n            window.removeEventListener('scroll', handlerMap.get(el)!);\n            handlerMap.delete(el);\n        }\n    }\n\n    /** 爲整個頁面上有設置懶加載屬性的元素加上監聽 */\n    function update() {\n        const els = document.querySelectorAll(`[${attr}]`);\n\n        for (let i = 0; i < els.length; i++) {\n            const el = els[i] as HTMLElement;\n            if (observer) {\n                observer.observe(el);\n            } else {\n                setListener(el);\n            }\n        }\n    }\n\n    if ('IntersectionObserver' in window) {\n        observer = new IntersectionObserver(entries => {\n            for (let i = 0; i < entries.length; i++) {\n                const item = entries[i];\n                if (item.isIntersecting) {\n                    const el = item.target as HTMLElement;\n                    loadElement(el);\n                    observer!.unobserve(el);\n                }\n            }\n        });\n    }\n\n    /** 綁定監聽懶加載事件 */\n    function bindLazyLoad(el: HTMLElement, binding: Binding) {\n        if (loadingPath) {\n            switch (type) {\n                case 'src':\n                    (el as HTMLImageElement).src = loadingPath;\n                    break;\n                case 'background':\n                    el.style.backgroundImage = `url(${loadingPath})`;\n                    break;\n            }\n        }\n\n        el.setAttribute(attr, binding.imageUrl);\n\n        if (observer) {\n            observer.observe(el);\n        } else if (checkReplaceImage(el)) {\n            loadElement(el);\n        } else {\n            setListener(el);\n        }\n    }\n\n    /** 解除綁定監聽懶加載事件 */\n    function unBindLazyLoad(el: HTMLElement) {\n        if (observer) {\n            observer.unobserve(el);\n        } else {\n            removeListener(el);\n        }\n    }\n\n    update();\n\n    return {\n        bindLazyLoad,\n        unBindLazyLoad\n    };\n}\n\nexport default lazyLoadFactory;"],"names":[],"mappings":";;;AA0BA,yBAAyB,QAKtB;AACC,QAAM,OAAO,OAAO,YAAY;AAChC,QAAM,OAAO,OAAO,YAAY;AAChC,QAAM,cAAc,OAAO,eAAe;AAC1C,QAAM,aAAmD,IAAI;AAK7D,MAAI;AAKJ,qBAAmB,IAAsB;AACrC,UAAM,QAAQ,GAAG;AACjB,OAAG,MAAM,GAAG,aAAa,SAAS;AAClC,OAAG,UAAU,WAAY;AACrB,SAAG,MAAM,OAAO,aAAa;AAC7B,SAAG,UAAU;AAAA;AAAA;AAOrB,uBAAqB,IAAiB;AAClC,YAAQ;AAAA,WACC;AACD,kBAAU;AACV;AAAA,WACC;AACD,WAAG,MAAM,kBAAkB,OAAO,GAAG,aAAa;AAClD;AAAA;AAER,OAAG,gBAAgB;AAAA;AAMvB,6BAA2B,IAA0B;AACjD,UAAM,eAAe,gBAAgB;AAErC,QAAI,CAAC,cAAc;AACf,aAAO;AAAA;AAGX,UAAM,SAAS,aAAa,YAAY,aAAa;AACrD,WAAO,SAAS,GAAG;AAAA;AAGvB,iCAA+B,IAAiB;AAC5C,WAAO,MAAM;AACT,UAAI,kBAAkB,KAAK;AACvB,oBAAY;AACZ,uBAAe;AAAA;AAAA;AAAA;AAK3B,uBAAqB,IAAiB;AAClC,UAAM,UAAU,SAAS,sBAAsB,KAAK;AACpD,eAAW,IAAI,IAAI;AACnB,WAAO,iBAAiB,UAAU;AAAA;AAGtC,0BAAwB,IAAiB;AACrC,QAAI,WAAW,IAAI,KAAK;AACpB,aAAO,oBAAoB,UAAU,WAAW,IAAI;AACpD,iBAAW,OAAO;AAAA;AAAA;AAK1B,oBAAkB;AACd,UAAM,MAAM,SAAS,iBAAiB,IAAI;AAE1C,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,KAAK,IAAI;AACf,UAAI,UAAU;AACV,iBAAS,QAAQ;AAAA,aACd;AACH,oBAAY;AAAA;AAAA;AAAA;AAKxB,MAAI,0BAA0B,QAAQ;AAClC,eAAW,IAAI,qBAAqB,aAAW;AAC3C,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,cAAM,OAAO,QAAQ;AACrB,YAAI,KAAK,gBAAgB;AACrB,gBAAM,KAAK,KAAK;AAChB,sBAAY;AACZ,mBAAU,UAAU;AAAA;AAAA;AAAA;AAAA;AAOpC,wBAAsB,IAAiB,SAAkB;AACrD,QAAI,aAAa;AACb,cAAQ;AAAA,aACC;AACD,UAAC,GAAwB,MAAM;AAC/B;AAAA,aACC;AACD,aAAG,MAAM,kBAAkB,OAAO;AAClC;AAAA;AAAA;AAIZ,OAAG,aAAa,MAAM,QAAQ;AAE9B,QAAI,UAAU;AACV,eAAS,QAAQ;AAAA,eACV,kBAAkB,KAAK;AAC9B,kBAAY;AAAA,WACT;AACH,kBAAY;AAAA;AAAA;AAKpB,0BAAwB,IAAiB;AACrC,QAAI,UAAU;AACV,eAAS,UAAU;AAAA,WAChB;AACH,qBAAe;AAAA;AAAA;AAIvB;AAEA,SAAO;AAAA,IACH;AAAA,IACA;AAAA;AAAA;;;;"}